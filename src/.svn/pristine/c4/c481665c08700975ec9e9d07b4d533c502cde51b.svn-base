class FootballDataMrg {
	private static _mInstance: FootballDataMrg;
	public static get getInstance(): FootballDataMrg {
		if (FootballDataMrg._mInstance == undefined)
			FootballDataMrg._mInstance = new FootballDataMrg();
		return FootballDataMrg._mInstance;
	}
	/**足球列表 串关*/
	public _mZQLB:GHashMap<GHashMap<FootballData>>;
	/**足球列表 单关*/
	public _mZQLBDG:GHashMap<GHashMap<FootballData>>;

	/**足球对应名称 0-53 */
	public fbNameItem = ["胜","平","负","胜","平","负","1:0","2:0","2:1","3:0","3:1","3:2","4:0","4:1","4:2","5:0","5:1","5:2","胜其他","0:0","1:1","2:2","3:3","平其他","0:1","0:2","1:2","0:3","1:3","2:3","0:4","1:4","2:4","0:5","1:5","2:5","负其他","0球","1球",
	"2球","3球","4球","5球","6球","7+球","胜胜","胜平","胜负","平胜","平平","平负","负胜","负平","负负"];

	private constructor() {
		this._mZQLB = new GHashMap<GHashMap<FootballData>>();
		this._mZQLBDG = new GHashMap<GHashMap<FootballData>>();
	}

	/**添加数据 */
	public addData(time:string,fb:GHashMap<FootballData>):void {
		if(fb != undefined) {
			this._mZQLB.Gput(time,fb);
		}
	}	

	/**添加单关足球数据 */
	public addDGData(time:string,fb:GHashMap<FootballData>):void {
		if(fb != undefined) {
			this._mZQLBDG.Gput(time,fb);
		}
	}

	/**通过当天time 和 场次id获取对象 */
	public getData(time:string,id:number):FootballData {
		if(this._mZQLB[time] != undefined) {
			return this._mZQLB[time].Gget(id);
		} else {
			return undefined;
		}
	}

	/**通过单关当天time获取对象*/
	public getDataByTime(time:string):GHashMap<FootballData> {
		return this._mZQLB[time];
	}

	/**通过单关当天time获取对象*/
	public getDGDataByTime(time:string):GHashMap<FootballData> {
		return this._mZQLBDG[time];
	}

	/**通过当天time 和 场次id获取单关足球对象 */
	public getDGData(time:string,id:number):FootballData {
		if(this._mZQLBDG[time] != undefined) {
			return this._mZQLBDG[time].Gget(id);
		} else {
			return undefined;
		}
	}

	/**通过id获取对象 */
	public getDataById(id:number):FootballData {
		let fb:GHashMap<FootballData>;
		for(let key of this._mZQLB.keys) {
			fb = this._mZQLB.Gget(key);
			if(fb.Gget(id) != undefined) {
				return fb.Gget(id);
			}
		}

		return undefined;
	}

	/**通过id和下标取对象 */
	public getDataByIdAndXB(id:number,xb:number):number {
		let fb:GHashMap<FootballData>;
		for(let key of this._mZQLB.keys) {
			fb = this._mZQLB.Gget(key);
			if(fb.Gget(id) != undefined ) {//
				return fb.Gget(id).listSX[xb];
			}
		}
		return undefined;
	}
}