/**
 * 足球竞猜管理类
 */
class GuessingFootballMrg {
	private static _mInstance: GuessingFootballMrg;
	public static get getInstance(): GuessingFootballMrg {
		if (GuessingFootballMrg._mInstance == undefined)
			GuessingFootballMrg._mInstance = new GuessingFootballMrg();
		return GuessingFootballMrg._mInstance;
	}

	private constructor() {
		// let a:zqObjData = new zqObjData();
		// a.dlxId = 1;
		// a.xlxIdList = [1,2,3];

		// let b:zqObjData = new zqObjData();
		// b.dlxId = 2;
		// b.xlxIdList = [4,5,6];

		// let c:zqObjData = new zqObjData();
		// c.dlxId = 3;
		// c.xlxIdList = [7];

		// let d:zqObjData = new zqObjData();
		// d.dlxId = 4;
		// d.xlxIdList = [8];

		// let e:zqObjData = new zqObjData();
		// e.dlxId = 5;
		// e.xlxIdList = [9];

		// let f:zqObjData = new zqObjData();
		// f.dlxId = 6;
		// f.xlxIdList = [10];

		// let g:zqObjData = new zqObjData();
		// g.dlxId = 7;
		// g.xlxIdList = [11];

		// let h:zqObjData = new zqObjData();
		// h.dlxId = 8;
		// h.xlxIdList = [12];

		// let zqList:Array<zqObjData> = new Array<zqObjData>();
		// zqList.push(a,b,c,d,e,f,g,h);
		// let list = this.getGuessingList(zqList,false);
		// this.getAllZSByList(list,[1,2,3]);
	}

	/**
	 * 获取当前所有注码 
	 * 不是单关 == 至少选中2条数据
	*/
	public getGuessingList(zqList:Array<zqObjData>, isDG?:boolean):Array<Strand> {
		if(zqList.length < 2 && isDG != true) {
			return undefined;
		}
		let list:Array<Strand> = new Array<Strand>();
		let data:Strand;
		for(let i=0;i<zqList.length;i++) {
			data = new Strand();
			list.push(data)
		}

		if(isDG == true) {
			for(let i=0;i<zqList.length;i++) {
				for(let j=0;j<zqList[i].xlxIdList.length;j++) {
					list[0].injectionNum += 1;
					list[0].typeStrand = 1;
					list[0].listStrand.push([zqList[i].xlxIdList[j]]);
				}
			}
		}

		for(let i=0;i<zqList.length;i++) {
			for(let j=0;j<zqList[i].xlxIdList.length;j++) {
				for(let k=i+1;k<zqList.length;k++) {
					for(let l=0;l<zqList[k].xlxIdList.length;l++) {//2串1
						list[1].injectionNum += 1;
						list[1].typeStrand = 2;
						list[1].listStrand.push([zqList[i].xlxIdList[j], zqList[k].xlxIdList[l]]);

							for(let m=k+1;m<zqList.length;m++) {
								for(let n=0;n<zqList[m].xlxIdList.length;n++) {//3串1
									list[2].injectionNum += 1;
									list[2].typeStrand = 3;
									list[2].listStrand.push([zqList[i].xlxIdList[j], zqList[k].xlxIdList[l], zqList[m].xlxIdList[n]]);

									for(let o=m+1;o<zqList.length;o++) {
										for(let p=0;p<zqList[o].xlxIdList.length;p++) {//4串1
											list[3].injectionNum += 1;
											list[3].typeStrand = 4;
											list[3].listStrand.push([zqList[i].xlxIdList[j], zqList[k].xlxIdList[l], zqList[m].xlxIdList[n], zqList[o].xlxIdList[p]]);

											for(let q=o+1;q<zqList.length;q++) {
												for(let r=0;r<zqList[q].xlxIdList.length;r++) {//5串1
													list[4].injectionNum += 1;
													list[4].typeStrand = 5;
													list[4].listStrand.push([zqList[i].xlxIdList[j], zqList[k].xlxIdList[l], zqList[m].xlxIdList[n], zqList[o].xlxIdList[p], zqList[q].xlxIdList[r]]);
													
													for(let s=q+1;s<zqList.length;s++) {
														for(let t=0;t<zqList[s].xlxIdList.length;t++) {//6串1
															list[5].injectionNum += 1;
															list[5].typeStrand = 6;
															list[5].listStrand.push([zqList[i].xlxIdList[j], zqList[k].xlxIdList[l], zqList[m].xlxIdList[n], zqList[o].xlxIdList[p], zqList[q].xlxIdList[r], zqList[s].xlxIdList[t]]);

															for(let u=s+1;u<zqList.length;u++) {
																for(let v=0;v<zqList[u].xlxIdList.length;v++) {//7串1
																	list[6].injectionNum += 1;
																	list[6].typeStrand = 7;
																	list[6].listStrand.push([zqList[i].xlxIdList[j], zqList[k].xlxIdList[l], zqList[m].xlxIdList[n], zqList[o].xlxIdList[p], zqList[q].xlxIdList[r], zqList[s].xlxIdList[t], zqList[u].xlxIdList[v]]);

																	for(let w=u+1;w<zqList.length;w++) {
																		for(let y=0;y<zqList[w].xlxIdList.length;y++) {//8串1
																			list[7].injectionNum += 1;
																			list[7].typeStrand = 8;
																			list[7].listStrand.push([zqList[i].xlxIdList[j], zqList[k].xlxIdList[l], zqList[m].xlxIdList[n], zqList[o].xlxIdList[p], zqList[q].xlxIdList[r], zqList[s].xlxIdList[t], zqList[u].xlxIdList[v], zqList[w].xlxIdList[y]]);

																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
					}
				}
			}
		}
		return list;
	}

	/**通过
	 * list(所有串数列表) 列表获取
	 * llist[0,1,2,3] == (单关,2串1 3串1 4串1) 总注数
	*/
	public getAllZSByList(list:Array<Strand>,llist:number[]):number {
		let all:number = 0;
		for(let i = 0;i<llist.length && i<list.length;i++) {
			if(llist[i] - 1 == i) {//进行加注
				all += list[i].injectionNum;
			}
		}

		return all;
	}
}

/**当前列表 */
class zqObjData{
	/**足球大类型id */
	public dlxId:number;
	/**小类型id列表 */
	public xlxIdList:number[] = [];
}

/**每串对应数据对象 */
class Strand {
	/**注数 */
	public injectionNum:number = 0;
	/**投注倍数 默认为1*/
	public injectionMul:number = 1;
	/**类型几串几 2:(2串1) 3:(3串1) 4:(4串1) .... 最大8*/
	public typeStrand:number;
	/**排序列表 */
	public listStrand:Array<number[]> = new Array<number[]>();
}